{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getRequestInstance);\n\nimport { getContext } from 'redux-saga/effects';\nimport { REQUESTS_CONFIG } from '../constants';\nexport function getRequestsConfig() {\n  return getContext(REQUESTS_CONFIG);\n}\nexport default function getRequestInstance(driverType) {\n  var config, driver;\n  return _regeneratorRuntime.wrap(function getRequestInstance$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (driverType === void 0) {\n            driverType = null;\n          }\n\n          _context.next = 3;\n          return getRequestsConfig();\n\n        case 3:\n          config = _context.sent;\n          driver = driverType ? config.driver[driverType] : config.driver[\"default\"] || config.driver;\n          return _context.abrupt(\"return\", driver.requestInstance);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/var/www/sites/Intro/node_modules/redux-saga-requests/es/sagas/get-request-instance.js"],"names":["_regeneratorRuntime","_marked","mark","getRequestInstance","getContext","REQUESTS_CONFIG","getRequestsConfig","driverType","config","driver","wrap","getRequestInstance$","_context","prev","next","sent","abrupt","requestInstance","stop"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,4BAAhC;;AAEA,IAAIC,OAAO;AACX;AACAD,mBAAmB,CAACE,IAApB,CAAyBC,kBAAzB,CAFA;;AAIA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,OAAO,SAASC,iBAAT,GAA6B;AAClC,SAAOF,UAAU,CAACC,eAAD,CAAjB;AACD;AACD,eAAe,SAASF,kBAAT,CAA4BI,UAA5B,EAAwC;AACrD,MAAIC,MAAJ,EAAYC,MAAZ;AACA,SAAOT,mBAAmB,CAACU,IAApB,CAAyB,SAASC,mBAAT,CAA6BC,QAA7B,EAAuC;AACrE,WAAO,CAAP,EAAU;AACR,cAAQA,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAACE,IAAjC;AACE,aAAK,CAAL;AACE,cAAIP,UAAU,KAAK,KAAK,CAAxB,EAA2B;AACzBA,YAAAA,UAAU,GAAG,IAAb;AACD;;AAEDK,UAAAA,QAAQ,CAACE,IAAT,GAAgB,CAAhB;AACA,iBAAOR,iBAAiB,EAAxB;;AAEF,aAAK,CAAL;AACEE,UAAAA,MAAM,GAAGI,QAAQ,CAACG,IAAlB;AACAN,UAAAA,MAAM,GAAGF,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcF,UAAd,CAAH,GAA+BC,MAAM,CAACC,MAAP,CAAc,SAAd,KAA4BD,MAAM,CAACC,MAArF;AACA,iBAAOG,QAAQ,CAACI,MAAT,CAAgB,QAAhB,EAA0BP,MAAM,CAACQ,eAAjC,CAAP;;AAEF,aAAK,CAAL;AACA,aAAK,KAAL;AACE,iBAAOL,QAAQ,CAACM,IAAT,EAAP;AAhBJ;AAkBD;AACF,GArBM,EAqBJjB,OArBI,CAAP;AAsBD","sourcesContent":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getRequestInstance);\n\nimport { getContext } from 'redux-saga/effects';\nimport { REQUESTS_CONFIG } from '../constants';\nexport function getRequestsConfig() {\n  return getContext(REQUESTS_CONFIG);\n}\nexport default function getRequestInstance(driverType) {\n  var config, driver;\n  return _regeneratorRuntime.wrap(function getRequestInstance$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (driverType === void 0) {\n            driverType = null;\n          }\n\n          _context.next = 3;\n          return getRequestsConfig();\n\n        case 3:\n          config = _context.sent;\n          driver = driverType ? config.driver[driverType] : config.driver[\"default\"] || config.driver;\n          return _context.abrupt(\"return\", driver.requestInstance);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}"]},"metadata":{},"sourceType":"module"}