{"ast":null,"code":"var _jsxFileName = \"/var/www/sites/Intro/src/components/FormControls.js\";\nimport React from \"react\";\nimport styles from \"../styles/formControls.module.css\";\nexport const Textarea = ({\n  input,\n  type,\n  label,\n  meta\n}) => {\n  const hasError = meta.touched && meta.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    placeholder: label,\n    className: \"form-control\" + \" \" + (hasError ? styles.invalid : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })), hasError && React.createElement(\"div\", {\n    className: styles.invalidTooltip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, meta.error));\n};","map":{"version":3,"sources":["/var/www/sites/Intro/src/components/FormControls.js"],"names":["React","styles","Textarea","input","type","label","meta","hasError","touched","error","invalid","invalidTooltip"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AAGA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAD,KAAgC;AACpD,QAAMC,QAAQ,GAAGD,IAAI,CAACE,OAAL,IAAgBF,IAAI,CAACG,KAAtC;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAY,IAAA,WAAW,EAAEJ,KAAzB;AACO,IAAA,SAAS,EAAE,iBAAiB,GAAjB,IAAwBE,QAAQ,GAAGN,MAAM,CAACS,OAAV,GAAoB,EAApD,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAKKH,QAAQ,IACT;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACU,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCL,IAAI,CAACG,KAA7C,CANJ,CADJ;AAUH,CAZM","sourcesContent":["import React from \"react\";\nimport styles from \"../styles/formControls.module.css\"\n\n\nexport const Textarea = ({input, type, label, meta}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div>\n            <div>\n                <textarea   placeholder={label}\n                       className={\"form-control\" + \" \" + (hasError ? styles.invalid : \"\")}/>\n            </div>\n            {hasError &&\n            <div className={styles.invalidTooltip}>{meta.error}</div>}\n        </div>\n    )\n};\n\n\n"]},"metadata":{},"sourceType":"module"}