{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(countServerRequests);\n\nimport { take, put } from 'redux-saga/effects';\nimport { END } from 'redux-saga';\nimport { getRequestActionFromResponse, isRequestAction, isResponseAction, isSuccessAction } from '../actions';\nexport default function countServerRequests(_ref) {\n  var serverRequestActions, _ref$finishOnFirstErr, finishOnFirstError, index, action;\n\n  return _regeneratorRuntime.wrap(function countServerRequests$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          serverRequestActions = _ref.serverRequestActions, _ref$finishOnFirstErr = _ref.finishOnFirstError, finishOnFirstError = _ref$finishOnFirstErr === void 0 ? true : _ref$finishOnFirstErr;\n          index = 0;\n          serverRequestActions.requestActionsToIgnore = [];\n          serverRequestActions.successActions = [];\n          serverRequestActions.dependentSuccessActions = [];\n          serverRequestActions.errorActions = [];\n\n        case 6:\n          if (!true) {\n            _context.next = 30;\n            break;\n          }\n\n          _context.next = 9;\n          return take(function (a) {\n            return isRequestAction(a) || isResponseAction(a);\n          });\n\n        case 9:\n          action = _context.sent;\n\n          if (!isRequestAction(action)) {\n            _context.next = 13;\n            break;\n          }\n\n          index += action.meta && action.meta.dependentRequestsNumber !== undefined ? action.meta.dependentRequestsNumber + 1 : 1;\n          return _context.abrupt(\"continue\", 6);\n\n        case 13:\n          if (isSuccessAction(action)) {\n            _context.next = 21;\n            break;\n          }\n\n          serverRequestActions.errorActions.push(action);\n\n          if (!finishOnFirstError) {\n            _context.next = 19;\n            break;\n          }\n\n          _context.next = 18;\n          return put(END);\n\n        case 18:\n          return _context.abrupt(\"return\");\n\n        case 19:\n          _context.next = 22;\n          break;\n\n        case 21:\n          if (action.meta.isDependentRequest) {\n            serverRequestActions.dependentSuccessActions.push(action);\n          } else {\n            serverRequestActions.successActions.push(action);\n          }\n\n        case 22:\n          index -= action.meta.isDependentRequest ? 2 : 1;\n\n          if (!(index === 0)) {\n            _context.next = 28;\n            break;\n          }\n\n          serverRequestActions.requestActionsToIgnore = serverRequestActions.successActions.map(getRequestActionFromResponse).map(function (a) {\n            return {\n              type: a.type\n            };\n          });\n          _context.next = 27;\n          return put(END);\n\n        case 27:\n          return _context.abrupt(\"return\");\n\n        case 28:\n          _context.next = 6;\n          break;\n\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/var/www/sites/Intro/node_modules/redux-saga-requests/es/sagas/count-server-requests.js"],"names":["_regeneratorRuntime","_marked","mark","countServerRequests","take","put","END","getRequestActionFromResponse","isRequestAction","isResponseAction","isSuccessAction","_ref","serverRequestActions","_ref$finishOnFirstErr","finishOnFirstError","index","action","wrap","countServerRequests$","_context","prev","next","requestActionsToIgnore","successActions","dependentSuccessActions","errorActions","a","sent","meta","dependentRequestsNumber","undefined","abrupt","push","isDependentRequest","map","type","stop"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,4BAAhC;;AAEA,IAAIC,OAAO;AACX;AACAD,mBAAmB,CAACE,IAApB,CAAyBC,mBAAzB,CAFA;;AAIA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,4BAAT,EAAuCC,eAAvC,EAAwDC,gBAAxD,EAA0EC,eAA1E,QAAiG,YAAjG;AACA,eAAe,SAASP,mBAAT,CAA6BQ,IAA7B,EAAmC;AAChD,MAAIC,oBAAJ,EAA0BC,qBAA1B,EAAiDC,kBAAjD,EAAqEC,KAArE,EAA4EC,MAA5E;;AAEA,SAAOhB,mBAAmB,CAACiB,IAApB,CAAyB,SAASC,oBAAT,CAA8BC,QAA9B,EAAwC;AACtE,WAAO,CAAP,EAAU;AACR,cAAQA,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAACE,IAAjC;AACE,aAAK,CAAL;AACET,UAAAA,oBAAoB,GAAGD,IAAI,CAACC,oBAA5B,EAAkDC,qBAAqB,GAAGF,IAAI,CAACG,kBAA/E,EAAmGA,kBAAkB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,IAAnC,GAA0CA,qBAAlK;AACAE,UAAAA,KAAK,GAAG,CAAR;AACAH,UAAAA,oBAAoB,CAACU,sBAArB,GAA8C,EAA9C;AACAV,UAAAA,oBAAoB,CAACW,cAArB,GAAsC,EAAtC;AACAX,UAAAA,oBAAoB,CAACY,uBAArB,GAA+C,EAA/C;AACAZ,UAAAA,oBAAoB,CAACa,YAArB,GAAoC,EAApC;;AAEF,aAAK,CAAL;AACE,cAAI,CAAC,IAAL,EAAW;AACTN,YAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA;AACD;;AAEDF,UAAAA,QAAQ,CAACE,IAAT,GAAgB,CAAhB;AACA,iBAAOjB,IAAI,CAAC,UAAUsB,CAAV,EAAa;AACvB,mBAAOlB,eAAe,CAACkB,CAAD,CAAf,IAAsBjB,gBAAgB,CAACiB,CAAD,CAA7C;AACD,WAFU,CAAX;;AAIF,aAAK,CAAL;AACEV,UAAAA,MAAM,GAAGG,QAAQ,CAACQ,IAAlB;;AAEA,cAAI,CAACnB,eAAe,CAACQ,MAAD,CAApB,EAA8B;AAC5BG,YAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA;AACD;;AAEDN,UAAAA,KAAK,IAAIC,MAAM,CAACY,IAAP,IAAeZ,MAAM,CAACY,IAAP,CAAYC,uBAAZ,KAAwCC,SAAvD,GAAmEd,MAAM,CAACY,IAAP,CAAYC,uBAAZ,GAAsC,CAAzG,GAA6G,CAAtH;AACA,iBAAOV,QAAQ,CAACY,MAAT,CAAgB,UAAhB,EAA4B,CAA5B,CAAP;;AAEF,aAAK,EAAL;AACE,cAAIrB,eAAe,CAACM,MAAD,CAAnB,EAA6B;AAC3BG,YAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA;AACD;;AAEDT,UAAAA,oBAAoB,CAACa,YAArB,CAAkCO,IAAlC,CAAuChB,MAAvC;;AAEA,cAAI,CAACF,kBAAL,EAAyB;AACvBK,YAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA;AACD;;AAEDF,UAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA,iBAAOhB,GAAG,CAACC,GAAD,CAAV;;AAEF,aAAK,EAAL;AACE,iBAAOa,QAAQ,CAACY,MAAT,CAAgB,QAAhB,CAAP;;AAEF,aAAK,EAAL;AACEZ,UAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA;;AAEF,aAAK,EAAL;AACE,cAAIL,MAAM,CAACY,IAAP,CAAYK,kBAAhB,EAAoC;AAClCrB,YAAAA,oBAAoB,CAACY,uBAArB,CAA6CQ,IAA7C,CAAkDhB,MAAlD;AACD,WAFD,MAEO;AACLJ,YAAAA,oBAAoB,CAACW,cAArB,CAAoCS,IAApC,CAAyChB,MAAzC;AACD;;AAEH,aAAK,EAAL;AACED,UAAAA,KAAK,IAAIC,MAAM,CAACY,IAAP,CAAYK,kBAAZ,GAAiC,CAAjC,GAAqC,CAA9C;;AAEA,cAAI,EAAElB,KAAK,KAAK,CAAZ,CAAJ,EAAoB;AAClBI,YAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA;AACD;;AAEDT,UAAAA,oBAAoB,CAACU,sBAArB,GAA8CV,oBAAoB,CAACW,cAArB,CAAoCW,GAApC,CAAwC3B,4BAAxC,EAAsE2B,GAAtE,CAA0E,UAAUR,CAAV,EAAa;AACnI,mBAAO;AACLS,cAAAA,IAAI,EAAET,CAAC,CAACS;AADH,aAAP;AAGD,WAJ6C,CAA9C;AAKAhB,UAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA,iBAAOhB,GAAG,CAACC,GAAD,CAAV;;AAEF,aAAK,EAAL;AACE,iBAAOa,QAAQ,CAACY,MAAT,CAAgB,QAAhB,CAAP;;AAEF,aAAK,EAAL;AACEZ,UAAAA,QAAQ,CAACE,IAAT,GAAgB,CAAhB;AACA;;AAEF,aAAK,EAAL;AACA,aAAK,KAAL;AACE,iBAAOF,QAAQ,CAACiB,IAAT,EAAP;AAtFJ;AAwFD;AACF,GA3FM,EA2FJnC,OA3FI,CAAP;AA4FD","sourcesContent":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(countServerRequests);\n\nimport { take, put } from 'redux-saga/effects';\nimport { END } from 'redux-saga';\nimport { getRequestActionFromResponse, isRequestAction, isResponseAction, isSuccessAction } from '../actions';\nexport default function countServerRequests(_ref) {\n  var serverRequestActions, _ref$finishOnFirstErr, finishOnFirstError, index, action;\n\n  return _regeneratorRuntime.wrap(function countServerRequests$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          serverRequestActions = _ref.serverRequestActions, _ref$finishOnFirstErr = _ref.finishOnFirstError, finishOnFirstError = _ref$finishOnFirstErr === void 0 ? true : _ref$finishOnFirstErr;\n          index = 0;\n          serverRequestActions.requestActionsToIgnore = [];\n          serverRequestActions.successActions = [];\n          serverRequestActions.dependentSuccessActions = [];\n          serverRequestActions.errorActions = [];\n\n        case 6:\n          if (!true) {\n            _context.next = 30;\n            break;\n          }\n\n          _context.next = 9;\n          return take(function (a) {\n            return isRequestAction(a) || isResponseAction(a);\n          });\n\n        case 9:\n          action = _context.sent;\n\n          if (!isRequestAction(action)) {\n            _context.next = 13;\n            break;\n          }\n\n          index += action.meta && action.meta.dependentRequestsNumber !== undefined ? action.meta.dependentRequestsNumber + 1 : 1;\n          return _context.abrupt(\"continue\", 6);\n\n        case 13:\n          if (isSuccessAction(action)) {\n            _context.next = 21;\n            break;\n          }\n\n          serverRequestActions.errorActions.push(action);\n\n          if (!finishOnFirstError) {\n            _context.next = 19;\n            break;\n          }\n\n          _context.next = 18;\n          return put(END);\n\n        case 18:\n          return _context.abrupt(\"return\");\n\n        case 19:\n          _context.next = 22;\n          break;\n\n        case 21:\n          if (action.meta.isDependentRequest) {\n            serverRequestActions.dependentSuccessActions.push(action);\n          } else {\n            serverRequestActions.successActions.push(action);\n          }\n\n        case 22:\n          index -= action.meta.isDependentRequest ? 2 : 1;\n\n          if (!(index === 0)) {\n            _context.next = 28;\n            break;\n          }\n\n          serverRequestActions.requestActionsToIgnore = serverRequestActions.successActions.map(getRequestActionFromResponse).map(function (a) {\n            return {\n              type: a.type\n            };\n          });\n          _context.next = 27;\n          return put(END);\n\n        case 27:\n          return _context.abrupt(\"return\");\n\n        case 28:\n          _context.next = 6;\n          break;\n\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}"]},"metadata":{},"sourceType":"module"}