{"ast":null,"code":"var _jsxFileName = \"/var/www/sites/Intro/src/components/FormControls.js\";\nimport React from \"react\";\nimport styles from \"../styles/formControls.module.css\";\nexport const Textarea = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"textarea\", Object.assign({}, input, props, {\n    className: \"form-control\" + \" \" + (hasError ? styles.invalid : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }))), hasError && React.createElement(\"div\", {\n    className: styles.invalidTooltip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, meta.error));\n};","map":{"version":3,"sources":["/var/www/sites/Intro/src/components/FormControls.js"],"names":["React","styles","Textarea","input","meta","props","hasError","error","invalid","invalidTooltip"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AAGA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAc,KAAGC;AAAjB,CAAD,KAA6B;AACjD,QAAMC,QAAQ,GAAIF,IAAI,CAACG,KAAvB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,kDAAgBJ,KAAhB,EAA2BE,KAA3B;AACO,IAAA,SAAS,EAAE,iBAAiB,GAAjB,IAAwBC,QAAQ,GAAGL,MAAM,CAACO,OAAV,GAAoB,EAApD,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ,EAKKF,QAAQ,IACT;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACQ,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCL,IAAI,CAACG,KAA7C,CANJ,CADJ;AAUH,CAZM","sourcesContent":["import React from \"react\";\nimport styles from \"../styles/formControls.module.css\"\n\n\nexport const Textarea = ({input, meta, ...props}) => {\n    const hasError =  meta.error;\n    return (\n        <div>\n            <div>\n                <textarea   {...input} {...props}\n                       className={\"form-control\" + \" \" + (hasError ? styles.invalid : \"\")}/>\n            </div>\n            {hasError &&\n            <div className={styles.invalidTooltip}>{meta.error}</div>}\n        </div>\n    )\n};\n\n\n"]},"metadata":{},"sourceType":"module"}