{"ast":null,"code":"import * as axios from \"axios\";\nimport { reducer as formReducer } from 'redux-form';\nimport createSagaMiddleware from 'redux-saga';\nimport posts from \"./reducers/posts\";\nimport { createRequestInstance, success, watchRequests } from \"redux-saga-requests\";\nimport { createDriver } from \"redux-saga-requests-axios\";\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { takeLatest, all } from \"redux-saga/effects\";\nimport { getAllPosts } from \"./actions/posts\";\n\nfunction* rootSaga() {\n  yield createRequestInstance({\n    driver: createDriver(axios.create({\n      baseURL: 'https://5e4aae066eafb7001488c7c7.mockapi.io'\n    }))\n  });\n  yield all([watchRequests(), takeLatest(success('ADD_POST'), getAllPosts)]);\n}\n\n;\nexport const configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(combineReducers({\n    posts,\n    form: formReducer\n  }), applyMiddleware(sagaMiddleware));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};","map":{"version":3,"sources":["/var/www/sites/Intro/src/store/index.js"],"names":["axios","reducer","formReducer","createSagaMiddleware","posts","createRequestInstance","success","watchRequests","createDriver","applyMiddleware","combineReducers","createStore","takeLatest","all","getAllPosts","rootSaga","driver","create","baseURL","configureStore","sagaMiddleware","store","form","run"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,OAAO,IAAIC,WAAnB,QAAqC,YAArC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAAQC,qBAAR,EAA+BC,OAA/B,EAAwCC,aAAxC,QAA4D,qBAA5D;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,SAAQC,eAAR,EAAyBC,eAAzB,EAA0CC,WAA1C,QAA4D,OAA5D;AACA,SAAQC,UAAR,EAAmBC,GAAnB,QAA6B,oBAA7B;AACA,SAAQC,WAAR,QAA0B,iBAA1B;;AAGA,UAAUC,QAAV,GAAqB;AACjB,QAAMV,qBAAqB,CAAC;AACxBW,IAAAA,MAAM,EAAER,YAAY,CAChBR,KAAK,CAACiB,MAAN,CAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb,CADgB;AADI,GAAD,CAA3B;AAOA,QAAML,GAAG,CAAC,CACNN,aAAa,EADP,EAENK,UAAU,CAACN,OAAO,CAAC,UAAD,CAAR,EAAqBQ,WAArB,CAFJ,CAAD,CAAT;AAIH;;AAAA;AAED,OAAO,MAAMK,cAAc,GAAG,MAAM;AAChC,QAAMC,cAAc,GAAGjB,oBAAoB,EAA3C;AACA,QAAMkB,KAAK,GAAGV,WAAW,CACrBD,eAAe,CAAC;AACZN,IAAAA,KADY;AAEZkB,IAAAA,IAAI,EAAEpB;AAFM,GAAD,CADM,EAKrBO,eAAe,CAACW,cAAD,CALM,CAAzB;AAOAA,EAAAA,cAAc,CAACG,GAAf,CAAmBR,QAAnB;AACA,SAAOM,KAAP;AACH,CAXM","sourcesContent":["import * as axios from \"axios\";\nimport {reducer as formReducer} from 'redux-form'\nimport createSagaMiddleware from 'redux-saga';\nimport posts from \"./reducers/posts\";\nimport {createRequestInstance, success, watchRequests} from \"redux-saga-requests\";\nimport {createDriver} from \"redux-saga-requests-axios\";\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {takeLatest,all} from \"redux-saga/effects\";\nimport {getAllPosts} from \"./actions/posts\";\n\n\nfunction* rootSaga() {\n    yield createRequestInstance({\n        driver: createDriver(\n            axios.create({\n                baseURL: 'https://5e4aae066eafb7001488c7c7.mockapi.io'\n            }),\n        )\n    });\n    yield all([\n        watchRequests(),\n        takeLatest(success('ADD_POST'),getAllPosts)\n    ])\n};\n\nexport const configureStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    const store = createStore(\n        combineReducers({\n            posts,\n            form: formReducer\n        }),\n        applyMiddleware(sagaMiddleware),\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n};"]},"metadata":{},"sourceType":"module"}