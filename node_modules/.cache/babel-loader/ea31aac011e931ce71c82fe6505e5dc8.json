{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport axios from 'axios';\n\nvar prepareSuccessPayload = function prepareSuccessPayload(response) {\n  return response.data;\n};\n\nexport var createDriver = function createDriver(axiosInstance) {\n  return {\n    requestInstance: axiosInstance,\n    getAbortSource: function getAbortSource() {\n      return axios.CancelToken.source();\n    },\n    abortRequest: function abortRequest(abortSource) {\n      abortSource.cancel();\n    },\n    sendRequest: function sendRequest(requestConfig, abortSource) {\n      return axiosInstance(_extends({\n        cancelToken: abortSource.token\n      }, requestConfig));\n    },\n    getSuccessPayload: function getSuccessPayload(response) {\n      if (Array.isArray(response)) {\n        return response.map(prepareSuccessPayload);\n      }\n\n      return prepareSuccessPayload(response);\n    },\n    getErrorPayload: function getErrorPayload(error) {\n      return error;\n    }\n  };\n};","map":{"version":3,"sources":["/var/www/sites/Intro/node_modules/redux-saga-requests-axios/es/axios-driver.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","axios","prepareSuccessPayload","response","data","createDriver","axiosInstance","requestInstance","getAbortSource","CancelToken","abortRequest","abortSource","cancel","sendRequest","requestConfig","cancelToken","token","getSuccessPayload","Array","isArray","map","getErrorPayload","error"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,QAA/B,EAAyC;AACnE,SAAOA,QAAQ,CAACC,IAAhB;AACD,CAFD;;AAIA,OAAO,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,aAAtB,EAAqC;AAC7D,SAAO;AACLC,IAAAA,eAAe,EAAED,aADZ;AAELE,IAAAA,cAAc,EAAE,SAASA,cAAT,GAA0B;AACxC,aAAOP,KAAK,CAACQ,WAAN,CAAkBd,MAAlB,EAAP;AACD,KAJI;AAKLe,IAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBC,WAAtB,EAAmC;AAC/CA,MAAAA,WAAW,CAACC,MAAZ;AACD,KAPI;AAQLC,IAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBC,aAArB,EAAoCH,WAApC,EAAiD;AAC5D,aAAOL,aAAa,CAAClB,QAAQ,CAAC;AAC5B2B,QAAAA,WAAW,EAAEJ,WAAW,CAACK;AADG,OAAD,EAE1BF,aAF0B,CAAT,CAApB;AAGD,KAZI;AAaLG,IAAAA,iBAAiB,EAAE,SAASA,iBAAT,CAA2Bd,QAA3B,EAAqC;AACtD,UAAIe,KAAK,CAACC,OAAN,CAAchB,QAAd,CAAJ,EAA6B;AAC3B,eAAOA,QAAQ,CAACiB,GAAT,CAAalB,qBAAb,CAAP;AACD;;AAED,aAAOA,qBAAqB,CAACC,QAAD,CAA5B;AACD,KAnBI;AAoBLkB,IAAAA,eAAe,EAAE,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;AAC/C,aAAOA,KAAP;AACD;AAtBI,GAAP;AAwBD,CAzBM","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport axios from 'axios';\n\nvar prepareSuccessPayload = function prepareSuccessPayload(response) {\n  return response.data;\n};\n\nexport var createDriver = function createDriver(axiosInstance) {\n  return {\n    requestInstance: axiosInstance,\n    getAbortSource: function getAbortSource() {\n      return axios.CancelToken.source();\n    },\n    abortRequest: function abortRequest(abortSource) {\n      abortSource.cancel();\n    },\n    sendRequest: function sendRequest(requestConfig, abortSource) {\n      return axiosInstance(_extends({\n        cancelToken: abortSource.token\n      }, requestConfig));\n    },\n    getSuccessPayload: function getSuccessPayload(response) {\n      if (Array.isArray(response)) {\n        return response.map(prepareSuccessPayload);\n      }\n\n      return prepareSuccessPayload(response);\n    },\n    getErrorPayload: function getErrorPayload(error) {\n      return error;\n    }\n  };\n};"]},"metadata":{},"sourceType":"module"}