import { success, isRequestAction, isResponseAction, getRequestActionFromResponse } from '../actions';

var shouldActionBePromisified = function shouldActionBePromisified(action, auto) {
  return auto && !(action.meta && action.meta.asPromise === false) || action.meta && action.meta.asPromise;
};

export default (function (_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$auto = _ref.auto,
      auto = _ref$auto === void 0 ? false : _ref$auto;

  var requestMap = new Map();
  return function () {
    return function (next) {
      return function (action) {
        if (isRequestAction(action) && shouldActionBePromisified(action, auto)) {
          return new Promise(function (resolve, reject) {
            requestMap.set(action, function (response, error) {
              return error ? reject(response) : resolve(response);
            });
            next(action);
          });
        }

        if (isResponseAction(action)) {
          var requestAction = getRequestActionFromResponse(action);

          if (shouldActionBePromisified(requestAction, auto)) {
            var requestActionPromise = requestMap.get(requestAction);
            requestActionPromise(action, action.type !== success(requestAction.type));
            requestMap["delete"](requestAction);
          }
        }

        return next(action);
      };
    };
  };
});